/*
    This file was initially machine-generated by recycle/GENERATE.js, using
    eSocial's evtExpRisco.xsd schema, and includes corresponding io-ts types.

    EDIT WITH CARE.
*/
import * as t from 'io-ts'

import * as tipos from './tipos'

/// S-2240 - Condições Ambientais do Trabalho - Agentes Nocivos
export const eSocial = t.type({
    /// Evento Condições Ambientais do Trabalho - Agentes Nocivos.
    /// CHAVE_GRUPO: {Id}
    /// REGRA:REGRA_ENVIO_PROC_FECHAMENTO
    /// REGRA:REGRA_EVENTOS_EXTEMP
    /// REGRA:REGRA_EVENTO_EXT_SEM_IMPACTO_FOPAG
    /// REGRA:REGRA_EXISTE_INFO_EMPREGADOR
    /// REGRA:REGRA_EXTEMP_REINTEGRACAO
    /// REGRA:REGRA_GERAL_VALIDA_DADOS_TABCONTRIB
    /// REGRA:REGRA_MESMO_PROCEMI
    /// REGRA:REGRA_RETIFICA_MESMO_VINCULO
    /// REGRA:REGRA_TSV_ATIVO_NA_DTEVENTO
    /// REGRA:REGRA_VINCULO_ATIVO_NA_DTEVENTO
    evtExpRisco: t.type({
        $: t.type({
            Id: tipos.TS_Id
        }),
        ideEvento: tipos.T_ideEvento_trab,
        ideEmpregador: tipos.T_ideEmpregador,
        ideVinculo: tipos.T_ideVinculo_sst,
        /// Ambiente de trabalho, atividades desempenhadas e exposição a agentes nocivos
        /// DESCRICAO_COMPLETA:Informações sobre o ambiente de trabalho, atividades desempenhadas e exposição a agentes nocivos.
        /// CHAVE_GRUPO: {dtIniCondicao}
        infoExpRisco: t.intersection([
            t.type({
                /// Informar a data em que o trabalhador iniciou as atividades nas condições descritas ou a data de início da obrigatoriedade deste evento para o empregador no eSocial, a que for mais recente.
                /// Validação: Deve ser uma data válida, igual ou posterior à data de admissão do vínculo a que se refere. Não pode ser anterior à data de início da obrigatoriedade deste evento para o empregador no eSocial, nem pode ser posterior a 30 (trinta) dias da data atual.
                dtIniCondicao: tipos.date,
                /// Informações relativas ao ambiente de trabalho.
                infoAmb: t.type({
                    /// Informar o tipo de estabelecimento do ambiente de trabalho.
                    localAmb: t.union([
                        /// Estabelecimento do próprio empregador
                        t.literal(1),
                        /// Estabelecimento de terceiros
                        t.literal(2)
                    ]),
                    /// Descrição do lugar administrativo, na estrutura organizacional da empresa, onde o trabalhador exerce suas atividades laborais.
                    dscSetor: tipos.TS_texto_100,
                    tpInsc: tipos.TS_tpInsc_1_3_4,
                    /// Número de inscrição onde está localizado o ambiente.
                    /// Validação: Deve ser um identificador válido, compatível com o conteúdo do campo {infoAmb/tpInsc}(./tpInsc) e:
                    /// a) Se {localAmb}(./localAmb) = [1], deve ser válido e existente na Tabela de Estabelecimentos (S-1005);
                    /// b) Se {localAmb}(./localAmb) = [2], deve ser diferente dos estabelecimentos informados na Tabela S-1005 e, se {infoAmb/tpInsc}(./tpInsc) = [1] e o empregador for pessoa jurídica, a raiz do CNPJ informado deve ser diferente da constante em S-1000.
                    nrInsc: tipos.TS_nrInsc_12_14
                }),
                /// Descrição das atividades desempenhadas.
                infoAtiv: t.type({
                    /// Descrição das atividades, físicas ou mentais, realizadas pelo trabalhador, por força do poder de comando a que se submete. As atividades deverão ser escritas com exatidão, e de forma sucinta, com a utilização de verbos no infinitivo impessoal. Ex.: Distribuir panfletos, operar máquina de envase, etc.
                    dscAtivDes: tipos.TS_texto_999
                }),
                /// Agente(s) nocivo(s) ao(s) qual(is) o trabalhador está exposto.
                /// CHAVE_GRUPO: {codAgNoc}, {dscAgNoc}
                agNoc: t.array(t.intersection([
                    t.type({
                        /// Informar o código do agente nocivo ao qual o trabalhador está exposto. Preencher com números e pontos. Caso não haja exposição, informar o código [09.01.001] (Ausência de agente nocivo ou de atividades previstas no Anexo IV do Decreto 3.048/1999).
                        /// Validação: Deve ser um código válido e existente na Tabela 24. Não é possível informar nenhum outro código de agente nocivo quando houver o código [09.01.001].
                        codAgNoc: t.string
                    }),
                    t.partial({
                        /// Descrição do agente nocivo.
                        /// Validação: Preenchimento obrigatório se {codAgNoc}(./codAgNoc) = [01.01.001, 01.02.001, 01.03.001, 01.04.001, 01.05.001, 01.06.001, 01.07.001, 01.08.001, 01.09.001, 01.10.001, 01.12.001, 01.13.001, 01.14.001, 01.15.001, 01.16.001, 01.17.001, 01.18.001, 05.01.001].
                        dscAgNoc: tipos.TS_texto_999,
                        /// Tipo de avaliação do agente nocivo.
                        tpAval: t.union([
                            /// Critério quantitativo
                            t.literal(1),
                            /// Critério qualitativo
                            t.literal(2)
                        ]),
                        /// Intensidade, concentração ou dose da exposição do trabalhador ao agente nocivo cujo critério de avaliação seja quantitativo.
                        /// Validação: Preenchimento obrigatório e exclusivo se {tpAval}(./tpAval) = [1].
                        intConc: t.number,
                        /// Limite de tolerância calculado para agentes específicos, conforme técnica de medição exigida na legislação.
                        /// Validação: Preenchimento obrigatório e exclusivo se {tpAval}(./tpAval) = [1] e {codAgNoc}(./codAgNoc) = [01.18.001, 02.01.014].
                        limTol: t.number,
                        /// Dose ou unidade de medida da intensidade ou concentração do agente.
                        /// Validação: Preenchimento obrigatório e exclusivo se {tpAval}(./tpAval) = [1].
                        unMed: t.union([
                            /// dose diária de ruído
                            t.literal(1),
                            /// decibel linear (dB (linear))
                            t.literal(2),
                            /// decibel (C) (dB(C))
                            t.literal(3),
                            /// decibel (A) (dB(A))
                            t.literal(4),
                            /// metro por segundo ao quadrado (m/s^^2^^)
                            t.literal(5),
                            /// metro por segundo elevado a 1,75 (m/s^^1,75^^)
                            t.literal(6),
                            /// parte de vapor ou gás por milhão de partes de ar contaminado (ppm)
                            t.literal(7),
                            /// miligrama por metro cúbico de ar (mg/m^^3^^)
                            t.literal(8),
                            /// fibra por centímetro cúbico (f/cm^^3^^)
                            t.literal(9),
                            /// grau Celsius (ºC)
                            t.literal(10),
                            /// metro por segundo (m/s)
                            t.literal(11),
                            /// porcentual
                            t.literal(12),
                            /// lux (lx)
                            t.literal(13),
                            /// unidade formadora de colônias por metro cúbico (ufc/m^^3^^)
                            t.literal(14),
                            /// dose diária
                            t.literal(15),
                            /// dose mensal
                            t.literal(16),
                            /// dose trimestral
                            t.literal(17),
                            /// dose anual
                            t.literal(18),
                            /// watt por metro quadrado (W/m^^2^^)
                            t.literal(19),
                            /// ampère por metro (A/m)
                            t.literal(20),
                            /// militesla (mT)
                            t.literal(21),
                            /// microtesla (μT)
                            t.literal(22),
                            /// miliampère (mA)
                            t.literal(23),
                            /// quilovolt por metro (kV/m)
                            t.literal(24),
                            /// volt por metro (V/m)
                            t.literal(25),
                            /// joule por metro quadrado (J/m^^2^^)
                            t.literal(26),
                            /// milijoule por centímetro quadrado (mJ/cm^^2^^)
                            t.literal(27),
                            /// milisievert (mSv)
                            t.literal(28),
                            /// milhão de partículas por decímetro cúbico (mppdc)
                            t.literal(29),
                            /// umidade relativa do ar (UR (%))
                            t.literal(30)
                        ]),
                        /// Técnica utilizada para medição da intensidade ou concentração.
                        /// Validação: Preenchimento obrigatório e exclusivo se {tpAval}(./tpAval) = [1].
                        tecMedicao: t.string,
                        /// EPC e EPI
                        /// DESCRICAO_COMPLETA:Informações relativas a Equipamentos de Proteção Coletiva - EPC e Equipamentos de Proteção Individual - EPI.
                        epcEpi: t.intersection([
                            t.type({
                                /// O empregador implementa medidas de proteção coletiva (EPC) para eliminar ou reduzir a exposição dos trabalhadores ao agente nocivo?
                                utilizEPC: t.union([
                                    /// Não se aplica
                                    t.literal(0),
                                    /// Não implementa
                                    t.literal(1),
                                    /// Implementa
                                    t.literal(2)
                                ]),
                                /// Utilização de EPI.
                                utilizEPI: t.union([
                                    /// Não se aplica
                                    t.literal(0),
                                    /// Não utilizado
                                    t.literal(1),
                                    /// Utilizado
                                    t.literal(2)
                                ])
                            }),
                            t.partial({
                                /// Os EPCs são eficazes na neutralização dos riscos ao trabalhador?
                                /// Validação: Preenchimento obrigatório e exclusivo se {utilizEPC}(./utilizEPC) = [2].
                                eficEpc: tipos.TS_sim_nao,
                                /// O EPI é eficaz na neutralização do risco ao trabalhador?
                                eficEpi: tipos.TS_sim_nao,
                                /// EPI.
                                /// CONDICAO_GRUPO: O (se {utilizEPI}(../utilizEPI) = [2]); N (nos demais casos)
                                /// CHAVE_GRUPO: {docAval}, {dscEPI}
                                epi: t.array(t.intersection([
                                    t.type({
                                    }),
                                    t.partial({
                                        /// Certificado de Aprovação - CA ou documento de avaliação do EPI.
                                        docAval: tipos.TS_texto_255,
                                        /// Descrição do EPI.
                                        /// Validação: Preenchimento obrigatório e exclusivo se {docAval}(./docAval) não for informado.
                                        dscEPI: tipos.TS_texto_999
                                    })
                                ])),
                                /// Requisitos das NR-06 e NR-09 pelo(s) EPI(s) informado(s)
                                /// DESCRICAO_COMPLETA:Requisitos da Norma Regulamentadora 06 - NR-06 e da Norma Regulamentadora 09 - NR-09 pelo(s) EPI(s) informado(s).
                                /// CONDICAO_GRUPO: O (se {utilizEPI}(../utilizEPI) = [2]); N (nos demais casos)
                                epiCompl: t.type({
                                    /// Foi tentada a implementação de medidas de proteção coletiva, de caráter administrativo ou de organização, optando-se pelo EPI por inviabilidade técnica, insuficiência ou interinidade, ou ainda em caráter complementar ou emergencial?
                                    medProtecao: tipos.TS_sim_nao,
                                    /// Foram observadas as condições de funcionamento do EPI ao longo do tempo, conforme especificação técnica do fabricante nacional ou importador, ajustadas às condições de campo?
                                    condFuncto: tipos.TS_sim_nao,
                                    /// Foi observado o uso ininterrupto do EPI ao longo do tempo, conforme especificação técnica do fabricante nacional ou importador, ajustadas às condições de campo?
                                    usoInint: tipos.TS_sim_nao,
                                    /// Foi observado o prazo de validade do CA no momento da compra do EPI?
                                    przValid: tipos.TS_sim_nao,
                                    /// É observada a periodicidade de troca definida pelo fabricante nacional ou importador e/ou programas ambientais, comprovada mediante recibo assinado pelo usuário em época própria?
                                    periodicTroca: tipos.TS_sim_nao,
                                    /// É observada a higienização conforme orientação do fabricante nacional ou importador?
                                    higienizacao: tipos.TS_sim_nao
                                })
                            })
                        ])
                    })
                ])),
                /// Responsável pelos registros ambientais
                /// DESCRICAO_COMPLETA:Informações relativas ao responsável pelos registros ambientais.
                respReg: t.array(t.intersection([
                    t.type({
                        /// Preencher com o CPF do responsável pelos registros ambientais.
                        /// Validação: Deve ser um CPF válido.
                        cpfResp: tipos.TS_cpf,
                        /// Órgão de classe ao qual o responsável pelos registros ambientais está vinculado.
                        ideOC: t.union([
                            /// Conselho Regional de Medicina - CRM
                            t.literal(1),
                            /// Conselho Regional de Engenharia e Agronomia - CREA
                            t.literal(4),
                            /// Outros
                            t.literal(9)
                        ]),
                        /// Número de inscrição no órgão de classe.
                        nrOC: t.string,
                        /// Sigla da Unidade da Federação - UF do órgão de classe.
                        ufOC: tipos.TS_uf
                    }),
                    t.partial({
                        /// Descrição (sigla) do órgão de classe ao qual o responsável pelos registros ambientais está vinculado.
                        /// Validação: Preenchimento obrigatório e exclusivo se {ideOC}(./ideOC) = [9].
                        dscOC: t.string
                    })
                ]))
            }),
            t.partial({
                /// Observações relativas a registros ambientais.
                /// CONDICAO_GRUPO: OC
                obs: t.type({
                    /// Observação(ões) complementar(es) referente(s) a registros ambientais.
                    obsCompl: tipos.TS_texto_999
                })
            })
        ])
    })
})

export type eSocial = t.TypeOf<typeof eSocial>

